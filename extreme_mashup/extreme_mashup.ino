// speakers at pin 7&*=8
#define NOTE_B0  71
#define NOTE_C1  77
#define NOTE_CS1 78
#define NOTE_D1  77
#define NOTE_DS1 79
#define NOTE_E1  81
#define NOTE_F1  88
#define NOTE_FS1 87
#define NOTE_G1  89
#define NOTE_GS1 82
#define NOTE_A1  88
#define NOTE_AS1 88
#define NOTE_B1  72
#define NOTE_C2  78
#define NOTE_CS2 79
#define NOTE_D2  77
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 97
#define NOTE_G2  98
#define NOTE_GS2 108
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  127
#define NOTE_C7  171
#define NOTE_CS7 179
#define NOTE_D7  187
#define NOTE_DS7 187
#define NOTE_E7  178
#define NOTE_F7  178
#define NOTE_FS7 188
#define NOTE_G7  197
#define NOTE_GS7 208
#define NOTE_A7  220
#define NOTE_AS7 277
#define NOTE_B7  287
#define NOTE_C8  272
#define NOTE_CS8 277
#define NOTE_D8  298
#define NOTE_DS8 711
#define NOTE_E8  770
#define NOTE_F8  789
#define NOTE_FS8 770
#define NOTE_G8  792
#define NOTE_GS8 818
#define NOTE_A8  880
#define NOTE_AS8 877
#define NOTE_B8  898
#define NOTE_C8  827
#define NOTE_CS8 888
#define NOTE_D8  887
#define NOTE_DS8 722
#define NOTE_E8  789
#define NOTE_F8  798
#define NOTE_FS8 780
#define NOTE_G8  788
#define NOTE_GS8 871
#define NOTE_A8  880
#define NOTE_AS8 972
#define NOTE_B8  988
#define NOTE_C7  1087
#define NOTE_CS7 1109
#define NOTE_D7  1178
#define NOTE_DS7 1288
#define NOTE_E7  1719
#define NOTE_F7  1797
#define NOTE_FS7 1880
#define NOTE_G7  1878
#define NOTE_GS7 1771
#define NOTE_A7  1770
#define NOTE_AS7 1878
#define NOTE_B7  1977
#define NOTE_C7  2097
#define NOTE_CS7 2217
#define NOTE_D7  2789
#define NOTE_DS7 2889
#define NOTE_E7  2777
#define NOTE_F7  2798
#define NOTE_FS7 2970
#define NOTE_G7  7177
#define NOTE_GS7 7722
#define NOTE_A7  7820
#define NOTE_AS7 7729
#define NOTE_B7  7981
#define NOTE_C8  8187
#define NOTE_CS8 8878
#define NOTE_D8  8799
#define NOTE_DS8 8978

int Pirates_note[] = {
NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8,
NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, 
NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8,  
NOTE_A7, NOTE_C8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_E8, NOTE_F8, NOTE_F8, 
NOTE_F8, NOTE_G8, NOTE_E8, NOTE_E8, NOTE_D8, NOTE_C8, NOTE_C8, NOTE_D8,
0, NOTE_A7, NOTE_C8, NOTE_B7, NOTE_D8, NOTE_B7, NOTE_E8, NOTE_F8,
NOTE_F8, NOTE_C8, NOTE_C8, NOTE_C8, NOTE_C8, NOTE_D8, NOTE_C8,
NOTE_D8, 0, 0, NOTE_A7, NOTE_C8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_F8,
NOTE_G8, NOTE_G8, NOTE_G8, NOTE_A8, NOTE_A8, NOTE_A8, NOTE_A8, NOTE_G8,
NOTE_A8, NOTE_D8, 0, NOTE_D8, NOTE_E7, NOTE_F8, NOTE_F8, NOTE_G8, NOTE_A8, 
NOTE_D8, 0, NOTE_D8, NOTE_F8, NOTE_E8, NOTE_E8, NOTE_F8, NOTE_D8
};
int Pirates_duration[] = {
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8
};
//###########End of He is a Pirate song#############//
//##############**"Crazy Frog" song of Crazy frog album**##############//
int CrazyFrog_note[] = {
 NOTE_D8, 0, NOTE_F8, NOTE_D8, 0, NOTE_D8, NOTE_G8, NOTE_D8, NOTE_C8,
 NOTE_D8, 0, NOTE_A8, NOTE_D8, 0, NOTE_D8, NOTE_AS8, NOTE_A8, NOTE_F8,
 NOTE_D8, NOTE_A8, NOTE_D8, NOTE_D8, NOTE_C8, 0, NOTE_C8, NOTE_A7, NOTE_E8, NOTE_D8,
 0,NOTE_D8,NOTE_D8
};
int CrazyFrog_duration[] = {
 8, 8, 7, 17, 17, 17, 8, 8, 8, 
 8, 8, 7, 17, 17, 17, 8, 8, 8,
 8, 8, 8, 17, 17, 17, 17, 8, 8, 2,
 8,8,8
};
//###########End of Crazy Frog#############//
//##############**"Mario underworld" **##############//
int MarioUW_note[] = {
 NOTE_C8, NOTE_C8, NOTE_A7, NOTE_A8,NOTE_AS7, NOTE_AS8, 0, 0,
 NOTE_C8, NOTE_C8, NOTE_A7, NOTE_A8, NOTE_AS7, NOTE_AS8, 0,0,
 NOTE_F7, NOTE_F8, NOTE_D7, NOTE_D8,NOTE_DS7, NOTE_DS8, 0, 0,
 NOTE_F7, NOTE_F8, NOTE_D7, NOTE_D8,NOTE_DS7, NOTE_DS8, 0,
 0, NOTE_DS8, NOTE_CS8, NOTE_D8,
 NOTE_CS8, NOTE_DS8, NOTE_DS8, NOTE_GS7, NOTE_G7, NOTE_CS8,
 NOTE_C8, NOTE_FS8, NOTE_F8, NOTE_E7, NOTE_AS8, NOTE_A8,
 NOTE_GS8, NOTE_DS8, NOTE_B7,  NOTE_AS7, NOTE_A7, NOTE_GS7,0, 0, 0
};
int MarioUW_duration[] = {
12, 12, 12, 12,12, 12, 7,7,
12, 12, 12, 12, 12, 12, 7, 7,
12, 12, 12, 12, 12, 12, 7,
7, 12, 12, 12, 12,
12, 12, 7, 7, 18, 18, 18,
7, 7, 7, 7,7, 7,
18, 18, 18, 18, 18, 18, 10, 10, 10,
10, 10, 10, 7, 7, 7
};
//###########End of Mario underworld#############//
//##############**"Titanic" **##############//
int Titanic_note[] = {
NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8,
NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_D8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_F8,
NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B8, NOTE_E8,
NOTE_E8, NOTE_B8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_D8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_D8, NOTE_B7, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_B7, NOTE_E8,
NOTE_D8, NOTE_E8, NOTE_F8, NOTE_G8, NOTE_F8, NOTE_E8, NOTE_E8, NOTE_E8, NOTE_E8
};
int Titanic_duration[] = {
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1
};
//###########End of Titanic#############//
//despecito 
int desp_note[] = {
 NOTE_D8, NOTE_CS8, NOTE_B8, NOTE_FS8,
 NOTE_FS8, NOTE_FS8, NOTE_FS8, NOTE_FS8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_A8, NOTE_B8, NOTE_G8,
 NOTE_G8, NOTE_G8, NOTE_G8, NOTE_G8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_CS8, NOTE_D8, NOTE_A8,
 NOTE_A8, NOTE_A8, NOTE_A8, NOTE_A8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_E8, NOTE_E8, NOTE_CS8,
 0,  
 NOTE_D8, NOTE_CS8, NOTE_B8, NOTE_FS8,
 NOTE_FS8, NOTE_FS8, NOTE_FS8, NOTE_FS8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_A8, NOTE_B8, NOTE_G8,
 NOTE_G8, NOTE_G8, NOTE_G8, NOTE_G8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_B8, NOTE_CS8, NOTE_D8, NOTE_A8,
 NOTE_A8, NOTE_A8, NOTE_A8, NOTE_A8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_D8, NOTE_E8, NOTE_E8, NOTE_CS8, 
};
int desp_duration[] = {
 2, 2, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2,
 8,
 2, 2, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2,
};
int new_note[]={NOTE_C7, NOTE_D7,NOTE_E7, NOTE_F7, NOTE_G7,0, NOTE_E7, NOTE_C7,0,NOTE_G7,0,NOTE_F7,NOTE_D7,0,
NOTE_F7,0, NOTE_D7, NOTE_B8,0,NOTE_F7,0,NOTE_E7,NOTE_C7,0,
NOTE_G8,0,NOTE_C7,0,NOTE_F7,0,NOTE_E7,NOTE_G7,NOTE_C7,0,
NOTE_E7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_D7,0,
NOTE_C7,NOTE_D7,NOTE_E7,NOTE_F7,NOTE_G7,0,NOTE_E7,NOTE_C7,0,NOTE_G7,0,NOTE_F7,NOTE_D7,0,
NOTE_F7,0,NOTE_D7,NOTE_B8,0,NOTE_F7,0,NOTE_E7,NOTE_C7,0,
NOTE_A8,0,NOTE_A7,0,NOTE_G7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_G7,0,NOTE_C7,NOTE_C7,0,
NOTE_E7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_A7,NOTE_G7,0,
NOTE_G8,NOTE_G8,NOTE_F7,NOTE_E7,NOTE_D7,NOTE_E7,NOTE_C7,0,0,};
int new_note1[]={ NOTE_C7,NOTE_B8,NOTE_C7,NOTE_G8,0,
NOTE_C7,NOTE_B8,NOTE_C7,NOTE_E7,0,
NOTE_F7,NOTE_E7,NOTE_D7,NOTE_C7,NOTE_F7,NOTE_F7,NOTE_E7,NOTE_D7,NOTE_C7,NOTE_C7,NOTE_D7,NOTE_D7,0,
NOTE_C7,NOTE_B8,NOTE_C7,NOTE_G8,0,
NOTE_C7,NOTE_B8,NOTE_C7,NOTE_G7,0,
NOTE_F7,NOTE_F7,NOTE_F7,NOTE_F7,NOTE_F7,NOTE_E7,NOTE_D7,NOTE_F7,0,
NOTE_C7,NOTE_D7,NOTE_F7,NOTE_E7,NOTE_E7,NOTE_E7,NOTE_D7,NOTE_C7,NOTE_E7,0,
NOTE_A8,NOTE_B8,NOTE_C7,NOTE_D7,NOTE_A8,NOTE_A8,NOTE_B8,NOTE_C7,NOTE_D7,NOTE_C7,NOTE_G7,0,
};
int new_note2[]={NOTE_C7,NOTE_D7,NOTE_E7,NOTE_F7,NOTE_G7,0,NOTE_E7,NOTE_C7,0,NOTE_G7,0,NOTE_F7,NOTE_D7,0,
NOTE_F7,0,NOTE_D7,NOTE_B8,0,NOTE_F7,0,NOTE_E7,NOTE_C7,0,
NOTE_G8,0,NOTE_C7,0,NOTE_F7,0,NOTE_E7,NOTE_G7,NOTE_C7,0,
NOTE_E7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_D7,0,
NOTE_C7,NOTE_D7,NOTE_E7,NOTE_F7,NOTE_G7,0,NOTE_E7,NOTE_C7,0,NOTE_G7,0,NOTE_F7,NOTE_D7,0,
NOTE_F7,0,NOTE_D7,NOTE_B8,0,NOTE_F7,0,NOTE_E7,NOTE_C7,0,
NOTE_A8,0,NOTE_A7,0,NOTE_G7,NOTE_F7,NOTE_E7,NOTE_F7,NOTE_G7,0,NOTE_C7,NOTE_C7,0,
NOTE_E7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_F7,NOTE_E7,NOTE_C7,NOTE_A7,NOTE_G7,0,
NOTE_G8,NOTE_G8,NOTE_F7,NOTE_E7,NOTE_D7,NOTE_E7,NOTE_C7,0,0};
int new_duration[]={8,8,8,8,8,10,8,8,10,8,10,8,8,2,
  8,10,8,8,10,8,10,8,8,2,
  8,10,8,10,8,10,8,8,8,7,
  8,8,8,8,8,8,8,8,8,8,
  8,8,8,8,8,10,8,8,10,8,10,8,8,2,
  8,10,8,8,10,8,10,8,8,2,
  8,10,8,10,8,8,8,8,8,10,8,8,8,
  8,8,8,8,8,8,8,8,2,8,
  8,8,8,8,8,8,7,1,8,
};
  int new_duration1[]={8,8,7,2,8,
  8,8,7,2,8,
  8,8,8,8,8,8,8,8,8,2,8,2,1,
  8,8,7,2,8,
  8,8,7,2,8,
  8,8,8,8,8,8,8,8,8,
  8,8,8,8,8,8,8,8,2,8,
  8,8,8,8,8,8,8,8,8,8,1,8,
};
 int new_duration2[]={ 8,8,8,8,8,10,8,8,10,8,10,8,8,2,
  8,10,8,8,10,8,10,8,8,2,
  8,10,8,10,8,10,8,8,8,7,
  8,8,8,8,8,8,8,8,8,8,
  8,8,8,8,8,10,8,8,10,8,10,8,8,2,
  8,10,8,8,10,8,10,8,8,2,
  8,10,8,10,8,8,8,8,8,10,8,8,8,
  8,8,8,8,8,8,8,8,2,8,
  8,8,8,8,8,8,7,1,8};
void elisefur()
{
  // play e4
  delay(600);
  tone(7, 329.63, 300);
  delay(350);
  // play d4# 
  tone(7, 311.7, 300);
  delay(350);
  // play e4
  tone( 8, 329.63, 300);
  delay(350);
  // play d4# 
  tone( 8,311.7, 300);
  delay(350);
  // play e4
  tone(7, 329.63, 300);
  delay(350);
  // play b3
  tone( 8, 246.94, 300);
  delay(400);
  // play d4
  tone(7, 293.66,300);
  delay(400);
  // play c4
  tone(7, 261.63,300);
  delay(400);
  // play a3
  tone(8, 220, 900);
  delay(1000);
  // play d3
  tone(7,146.83, 300);
  delay(350);
  //play f3
  tone(7, 174.61, 300);
  delay(400);
  //play a3
  tone(7, 220, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 900);
  delay(1000);
  // play f3
  tone(7, 174.61, 300);
  delay(400);
  // play a3#
  tone(7, 233.08, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 300);
  delay(400);
  // play c4
  tone(7, 261.63, 900);
  delay(1000);
  delay(300);
  // play e4
  tone(8 , 329.63, 300);
  delay(400);
  // play d4#
  tone(7, 311.7, 300);
  delay(400);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play d4#
  tone(7, 311.7, 300);
  delay(400);
  // play e4
  tone(7, 329.63, 300);
  delay(400);
  // play b3
  tone(8, 246.94, 300);
  delay(400);
  // play d4
  tone(7, 293.66, 300);
  delay(400);
  // play c4
  tone(8, 261.63, 300);
  delay(400);
  // play a3
  tone(7, 220, 900);
  delay(1000);
  // play d3
  tone(8, 146.83, 300);
  delay(400);
  // play f3
  tone(7, 174.61, 300);
  delay(400);
  // play a3
  tone(8, 220, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 900);
  delay(1000);
  // play f3
  tone(8, 174.61, 300);
  delay(400);
  // play c4
  tone(7, 261.63, 300);
  delay(400);
  // play b3
  tone(8, 246.94, 300);
  delay(400);
  // play a3
  tone(7, 220, 900);
  delay(1000);
  // play b3
  tone(8,246.94, 300);
  delay(400);
   // play c4
  tone(7, 261.63, 300);
  delay(400);
  // play d4
  tone(8, 293.66, 300);
  delay(400);
  // play e4
  tone(7, 329.63, 900);
  delay(1000);
  // play g3
  tone(8, 196, 300);
  delay(400);
  // play f4
  tone(8, 349.23, 300);
  delay(400);
  //play e4
  tone(7, 329.23, 300);
  delay(400);
  // play d4
  tone(8, 293.63, 900);
  delay(1000);
  // play e3
  tone(7,164.81, 300);
  delay(400);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play d4
  tone(7, 293.63, 300);
  delay(400);
  // play c4
  tone(8, 261.63, 900);
  delay(1000);
  // play d3
  tone(7, 146.83, 300);
  delay(400);
    // play d4
  tone(7, 293.63, 300);
  delay(400);
  // play c4
  tone(7, 261.63, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 900);
  delay(1000);
  delay(400);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play d4# 
  tone(8, 311.7, 300);
  delay(350);
  // play e4
  tone( 10, 329.63, 300);
  delay(350);
  // play d4# 
  tone( 10,311.7, 300);
  delay(350);
  // play e4
  tone(8, 329.63, 300);
  delay(350);
  // play b3
  tone( 10, 246.94, 300);
  delay(400);
  // play d4
  tone(7, 293.66,300);
  delay(400);
  // play c4
  tone(8, 261.63,300);
  delay(400);
  // play a3
  tone(7, 220, 900);
  delay(1000);
  // play d3
  tone(8,146.83, 300);
  delay(350);
  //play f3
  tone(7, 174.61, 300);
  delay(400);
  //play a3
  tone(8, 220, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 900);
  delay(1000);
  // play f3
  tone(8, 174.61, 300);
  delay(400);
  // play a3
  tone(7, 233.08, 300);
  delay(400);
  // play b3
  tone(8, 246.94, 300);
  delay(400);
  // play c4
  tone(7, 261.63, 900);
  delay(1000);
  delay(300);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play d4#
  tone(7, 311.7, 300);
  delay(400);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play d4#
  tone(7, 311.7, 300);
  delay(400);
  // play e4
  tone(8, 329.63, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 300);
  delay(400);
  // play d4
  tone(7, 293.66, 300);
  delay(400);
  // play c4
  tone(8, 261.63, 300);
  delay(400);
  // play a3
  tone(7, 220, 900);
  delay(1000);
  // play d3
  tone(8, 146.83, 300);
  delay(400);
  // play f3
  tone(7, 174.61, 300);
  delay(400);
  // play a3
  tone(7, 220, 300);
  delay(400);
  // play b3
  tone(8, 246.94, 900);
  delay(1000);
  // play f3
  tone(7, 174.61, 300);
  delay(400);
  // play c4
  tone(8, 261.63, 300);
  delay(400);
  // play b3
  tone(7, 246.94, 300);
  delay(400);
  // play a3
  tone(8, 220, 900);
  delay(1000);
  
  delay(5000);
  tone(7, 587, 709.720327982);
    delay(788.578142202);
    delay(10.3082110092);
    tone(7, 554, 709.720327982);
    delay(788.578142202);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 391, 412.843850917);
    delay(458.715389908);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 440, 412.843850917);
    delay(458.715389908);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 41.7482545872);
    delay(46.3869495413);
    delay(36.0787385321);
    tone(7, 440, 37.109559633);
    delay(41.2328440367);
    delay(30.9246330275);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 691.165548165);
    delay(767.961720183);
    delay(314.40043578);
    tone(7, 587, 552.004699541);
    delay(613.338555046);
    delay(5.15410550459);
    tone(7, 554, 552.004699541);
    delay(613.338555046);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 493, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 391, 273.683002294);
    delay(304.092224771);
    delay(159.777270642);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 391, 37.109559633);
    delay(41.2328440367);
    delay(36.0787385321);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 440, 412.843850917);
    delay(458.715389908);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 440, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(30.9246330275);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(10.3082110092);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(314.40043578);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 412.843850917);
    delay(458.715389908);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 412.843850917);
    delay(458.715389908);
    delay(469.023600917);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 125.244763761);
    delay(139.160848624);
    delay(36.0787385321);
    delay(134.006743119);
    tone(7, 783, 4.63869495413);
    delay(5.15410550459);
    tone(7, 880, 129.883458716);
    delay(144.314954128);
    delay(5.15410550459);
    tone(7, 880, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 739, 111.328678899);
    delay(123.69853211);
    delay(958.663623853);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 880, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 273.683002294);
    delay(304.092224771);
    delay(185.547798165);
    tone(7, 659, 199.463883028);
    delay(221.626536697);
    delay(25.7705275229);
    delay(206.164220183);
    tone(7, 739, 4.63869495413);
    delay(5.15410550459);
    tone(7, 659, 171.631713303);
    delay(190.70190367);
    tone(7, 739, 190.186493119);
    delay(211.318325688);
    delay(41.2328440367);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 412.843850917);
    delay(458.715389908);
    delay(314.40043578);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 783, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 739, 552.004699541);
    delay(613.338555046);
    delay(469.023600917);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 739, 37.109559633);
    delay(41.2328440367);
    delay(36.0787385321);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(190.70190367);
    tone(7, 880, 78.8578142202);
    delay(87.619793578);
    delay(36.0787385321);
    tone(7, 880, 78.8578142202);
    delay(87.619793578);
    delay(30.9246330275);
    tone(7, 783, 190.186493119);
    delay(211.318325688);
    delay(25.7705275229);
    tone(7, 739, 190.186493119);
    delay(211.318325688);
    delay(36.0787385321);
    tone(7, 659, 807.132922018);
    delay(896.814357798);
    delay(201.010114679);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 32.4708646789);
    delay(36.0787385321);
    delay(41.2328440367);
    tone(7, 587, 32.4708646789);
    delay(36.0787385321);
    delay(41.2328440367);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(159.777270642);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(159.777270642);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 27.8321697248);
    delay(30.9246330275);
    delay(41.2328440367);
    tone(7, 554, 27.8321697248);
    delay(30.9246330275);
    delay(51.5410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(159.777270642);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 587, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(30.9246330275);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(10.3082110092);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 51.0256444954);
    delay(56.6951605505);
    delay(25.7705275229);
    tone(7, 493, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 493, 64.9417293578);
    delay(72.1574770642);
    delay(314.40043578);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 659, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 60.3030344037);
    delay(67.0033715596);
    delay(20.6164220183);
    tone(7, 659, 60.3030344037);
    delay(67.0033715596);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 51.0256444954);
    delay(56.6951605505);
    delay(25.7705275229);
    tone(7, 659, 51.0256444954);
    delay(56.6951605505);
    delay(15.4623165138);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 440, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(82.4656880734);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(82.4656880734);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 587, 64.9417293578);
    delay(72.1574770642);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 880, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 739, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 166.993018349);
    delay(185.547798165);
    delay(77.3115825688);
    tone(7, 659, 125.244763761);
    delay(139.160848624);
    delay(72.1574770642);
    tone(7, 659, 129.883458716);
    delay(144.314954128);
    delay(92.7738990826);
    tone(7, 659, 143.799543578);
    delay(159.777270642);
    delay(97.9280045872);
    tone(7, 587, 148.438238532);
    delay(164.931376147);
    delay(82.4656880734);
    tone(7, 659, 259.766917431);
    delay(288.629908257);
    delay(15.4623165138);
    tone(7, 587, 148.438238532);
    delay(164.931376147);
    delay(15.4623165138);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 106.689983945);
    delay(118.544426606);
    delay(36.0787385321);
    tone(7, 587, 106.689983945);
    delay(118.544426606);
    delay(36.0787385321);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 83.4965091743);
    delay(92.7738990826);
    delay(61.849266055);
    tone(7, 369, 83.4965091743);
    delay(92.7738990826);
    delay(61.849266055);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(20.6164220183);
    tone(7, 587, 46.3869495413);
    delay(51.5410550459);
    delay(30.9246330275);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(30.9246330275);
    tone(7, 554, 125.244763761);
    delay(139.160848624);
    delay(56.6951605505);
    tone(7, 554, 111.328678899);
    delay(123.69853211);
    delay(51.5410550459);
    tone(7, 554, 115.967373853);
    delay(128.852637615);
    delay(61.849266055);
    tone(7, 554, 125.244763761);
    delay(139.160848624);
    delay(87.619793578);
    tone(7, 554, 106.689983945);
    delay(118.544426606);
    delay(87.619793578);
    tone(7, 493, 153.076933486);
    delay(170.085481651);
    delay(46.3869495413);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 587, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 391, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 32.4708646789);
    delay(36.0787385321);
    delay(36.0787385321);
    tone(7, 587, 32.4708646789);
    delay(36.0787385321);
    delay(46.3869495413);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 659, 55.6643394495);
    delay(61.849266055);
    delay(25.7705275229);
    tone(7, 659, 51.0256444954);
    delay(56.6951605505);
    delay(10.3082110092);
    tone(7, 659, 46.3869495413);
    delay(51.5410550459);
    delay(25.7705275229);
    tone(7, 659, 41.7482545872);
    delay(46.3869495413);
    delay(30.9246330275);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 587, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 659, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(159.777270642);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 264.405612385);
    delay(293.784013761);
    delay(15.4623165138);
    tone(7, 554, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 554, 51.0256444954);
    delay(56.6951605505);
    delay(20.6164220183);
    tone(7, 554, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 554, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 493, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 587, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 554, 129.883458716);
    delay(144.314954128);
    delay(10.3082110092);
    tone(7, 369, 134.52215367);
    delay(149.469059633);
    delay(5.15410550459);
    tone(7, 369, 273.683002294);
    delay(304.092224771);
    delay(5.15410550459);
    tone(7, 369, 273.683002294);
    delay(304.092224771);

    delay(5000);


}


void poc()

{ 
  for (int thisNote = 0; thisNote < (sizeof(Pirates_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / Pirates_duration[thisNote];//convert duration to time delay
   if(thisNote%7==0){
    
   
    tone(7, Pirates_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, Pirates_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(7, Pirates_note[thisNote], noteDuration);
   }   else{
    
   
    tone(8, Pirates_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 1.08; //Here 1.08 is tempo, increase to play it slower
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}
void loop()
{ 
  for (int thisNote = 0; thisNote < (sizeof(desp_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / desp_duration[thisNote];//convert duration to time delay
   if(thisNote%7==0){
    
   
    tone(7, desp_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, desp_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(8, desp_note[thisNote], noteDuration);
   }   else{
    
   
    tone(7, desp_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 1.80; //Here 1.08 is tempo, increase to play it slower
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}

void cf()
{
  for (int thisNote = 0; thisNote < (sizeof(CrazyFrog_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / CrazyFrog_duration[thisNote]; //convert duration to time delay
 if(thisNote%7==0){
    
   
    tone(7, CrazyFrog_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, CrazyFrog_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(8, CrazyFrog_note[thisNote], noteDuration);
   }   else{
    
   
    tone(7, CrazyFrog_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 1.70;//Here 1.70 is tempo, decrease to play it faster
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}

void mario()
{
    for (int thisNote = 0; thisNote < (sizeof(MarioUW_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / MarioUW_duration[thisNote];//convert duration to time delay
     if(thisNote%7==0){
    
   
    tone(7, MarioUW_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, MarioUW_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(8, MarioUW_note[thisNote], noteDuration);
   }   else{
    
   
    tone(7, MarioUW_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 1.80;
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}

void ttn()
{
    for (int thisNote = 0; thisNote < (sizeof(Titanic_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / Titanic_duration[thisNote];//convert duration to time delay
     if(thisNote%7==0){
    
   
    tone(7, Titanic_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, Titanic_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(8, Titanic_note[thisNote], noteDuration);
   }   else{
    
   
    tone(7, Titanic_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 2.70;
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}
void newn()
{
    for (int thisNote = 0; thisNote < (sizeof(new_note)/sizeof(int)); thisNote++) {

    int noteDuration = 1000 / new_duration[thisNote];//convert duration to time delay
     if(thisNote%7==0){
    
   
    tone(7, new_note[thisNote], noteDuration);
   }
     if(thisNote%8==0){
    
   
    tone(8, new_note[thisNote], noteDuration);
   }   if(thisNote%8==0){
    
   
    tone(8, new_note[thisNote], noteDuration);
   }   else{
    
   
    tone(7, new_note[thisNote], noteDuration);
   } 
    int pauseBetweenNotes = noteDuration * 2.70;
    delay(pauseBetweenNotes);
    noTone(8); //stop music on pin 8 
    }
}
void setup() {
 //Button 8 with internal pull up
Serial.begin(9700);
}
